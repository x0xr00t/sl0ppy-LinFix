#!/bin/bash
#
# Team sl0ppyr00t Kali Issue Fixer
# Author: x0xr00t

if (( $EUID != 0 )); then
    echo -e "\e[91mPlease run as root\e[0m"
    exit
fi

red='\e[91m'
yellow='\e[93m'
white='\e[97m'

auth="P.Hoogeveen"
AKA="x0xr00t"

fixapt="apt clean && apt --fix-missing -y"
aptfile="apt-get purge apt-file -y && apt-get install apt-file -y && apt-file update"
fixdpkg="apt clean && dpkg --configure -a && apt install -f"
fixchsum='echo "deb http://kali.cs.nctu.edu.tw/kali kali-last-snapshot main contrib non-free" | sudo tee /etc/apt/sources.list'
fixbroken="apt --fix-broken install -y"
fixmissing="apt update --fix-missing -y"
apply="apt update -y"
upgrade="apt full-upgrade -y"
downgrade="apt clean && apt full-upgrade --allow-downgrades -y"
remove="apt autoremove -y"
restore='echo "deb http://http.kali.org/kali kali-rolling main contrib non-free" | sudo tee /etc/apt/sources.list'
allinstall="apt install kali-linux-everything -y"
updategrub="update-grub && grub-install /dev/sda"
fixkernel="dpkg --list | grep linux-image && apt-get purge linux-image-OLD_VERSION && apt-get install linux-image-newest -y"
healthcheck="dpkg --audit && apt --fix-broken install -y && apt autoremove -y && apt clean"

# Function to check mirror availability
check_mirror() {
    if ping -c 1 kali.cs.nctu.edu.tw &>/dev/null; then
        echo -e "$yellow{sl0p} Using NCTU mirror..."
        echo "deb http://kali.cs.nctu.edu.tw/kali kali-last-snapshot main contrib non-free" > /etc/apt/sources.list
    else
        echo -e "$red{sl0p} NCTU mirror not reachable. Restoring original source list."
        restore
    fi
}

# Function to check and perform downgrade only if needed
checkdowngrade() {
    if apt list --upgradable | grep downgrade &>/dev/null; then
        echo -e "$yellow{sl0p} Downgrading packages..."
        apt full-upgrade --allow-downgrades -y
    else
        echo -e "$yellow{sl0p} No downgrades needed."
    fi
}

menu() {
    clear
    echo -e "$red"
    cat << "EOF"
  ██████  ██▓     ▒█████   ██▓███   ██▓███ ▓██   ██▓ ██▀███   ▒█████   ▒█████  ▄▄▄█████▓
▒██    ▒ ▓██▒    ▒██▒  ██▒▓██░  ██▒▓██░  ██▒▒██  ██▒▓██ ▒ ██▒▒██▒  ██▒▒██▒  ██▒▓  ██▒ ▓▒
░ ▓██▄   ▒██░    ▒██░  ██▒▓██░ ██▓▒▓██░ ██▓▒ ▒██ ██░▓██ ░▄█ ▒▒██░  ██▒▒██░  ██▒▒ ▓██░ ▒░
  ▒   ██▒▒██░    ▒██   ██░▒██▄█▓▒ ▒▒██▄█▓▒ ▒ ░ ▐██▓░▒██▀▀█▄  ▒██   ██░▒██   ██░░ ▓██▓ ░
▒██████▒▒░██████▒░ ████▓▒░▒██▒ ░  ░▒██▒ ░  ░ ░ ██▒▓░░██▓ ▒██▒░ ████▓▒░░ ████▓▒░  ▒██▒ ░
▒ ▒▓▒ ▒ ░░ ▒░▓  ░░ ▒░▒░▒░ ▒▓▒░ ░  ░▒▓▒░ ░  ░  ██▒▒▒ ░ ▒▓ ░▒▓░░ ▒░▒░▒░ ░ ▒░▒░▒░   ▒ ░░
░ ░▒  ░ ░░ ░ ▒  ░  ░ ▒ ▒░ ░▒ ░     ░▒ ░     ▓██ ░▒░   ░▒ ░ ▒░  ░ ▒ ▒░   ░ ▒ ▒░     ░
░  ░  ░    ░ ░   ░ ░ ░ ▒  ░░       ░░       ▒ ▒ ░░    ░░   ░ ░ ░ ░ ▒  ░ ░ ░ ▒    ░
      ░      ░  ░    ░ ░                    ░ ░         ░         ░ ░      ░ ░
                                            ░ ░
EOF
    echo -e "$white Author: $red$auth $white AKA: $red$AKA"
    echo -e "$yellow"
    echo ".%%..%%...%%%%...%%......%%%%%%..%%%%%%..%%%%%%..%%..%%."
    echo ".%%.%%...%%..%%..%%........%%....%%........%%.....%%%%.."
    echo ".%%%%....%%%%%%..%%........%%....%%%%......%%......%%..."
    echo ".%%.%%...%%..%%..%%........%%....%%........%%.....%%%%.."
    echo ".%%..%%..%%..%%..%%%%%%..%%%%%%..%%......%%%%%%..%%..%%."
    echo "........................................................"
    echo -e "$red{!} GIFT: Added installer for every Kali tool"
    echo -e "$white"

    select opt in "${options[@]}"
    do
        case $opt in
            "APT Fix")
                echo -e "$yellow{sl0p} Fixing APT Issues..."
                sleep 3
                $fixapt
                echo -e "$yellow{sl0p} Applying Settings..."
                sleep 2 
                $apply
                echo -e "$yellow{sl0p} Upgrading Packages..."
                sleep 2 
                $upgrade
                ;;
            "APT Broken Install Fix")
                echo -e "$yellow{sl0p} Fixing Broken Install Issues..."
                sleep 3
                $fixbroken
                echo -e "$yellow{sl0p} Applying Settings..."
                sleep 2 
                $apply
                echo -e "$yellow{sl0p} Upgrading Packages..."
                sleep 2 
                $upgrade
                ;;
            "APT Missing Fix")
                echo -e "$yellow{sl0p} Fixing Missing Dependencies..."
                sleep 3
                $fixmissing
                echo -e "$yellow{sl0p} Applying Settings..."
                sleep 2
                $apply
                echo -e "$yellow{sl0p} Upgrading Packages..."
                sleep 2 
                $upgrade
                ;;
            "Apt File")
                echo -e "$yellow{sl0p} Fixing APT File Issues..."
                sleep 3
                $aptfile
                sleep 2 
                echo -e "$yellow{sl0p} Applying Settings..."
                sleep 2 
                $apply
                ;; 
            "CheckSum Fix")
                echo -e "$yellow{sl0p} Fixing APT Checksum Issues..."
                sleep 3
                check_mirror
                sleep 2 
                echo -e "$yellow{sl0p} Applying Settings..."
                sleep 2 
                $apply
                echo -e "$yellow{sl0p} Upgrading Packages..."
                sleep 2 
                $upgrade
                ;;
            "DPKG Issue Fix")
                echo -e "$yellow{sl0p} Fixing DPKG Issues..."
                sleep 3
                $fixdpkg
                echo -e "$yellow{sl0p} Applying Settings..."
                sleep 2 
                $apply
                echo -e "$yellow{sl0p} Upgrading Packages..."
                sleep 2 
                $upgrade
                ;;
            "Apt Fix With Downgrade")
                echo -e "$yellow{sl0p} Fixing APT Issues With Downgrade..."
                sleep 3
                checkdowngrade
                ;;
            "Apt Auto Remove")
                echo -e "$yellow{sl0p} Auto Removing Unused Packages..."
                sleep 3
                $remove
                sleep 2 
                $apply
                ;;    
            "Restore Original Kali repo")
                echo -e "$yellow{sl0p} Restoring Original Kali Repositories..."
                sleep 3
                $restore
                echo -e "$yellow{sl0p} Applying Settings..."
                sleep 2 
                $apply
                echo -e "$yellow{sl0p} Upgrading Packages..."
                sleep 2 
                $upgrade
                ;;
            "Install Every Kali Tool")
                echo -e "$yellow{sl0p} Installing All Kali Tools..."
                sleep 3
                $allinstall
                sleep 2 
                echo -e "$yellow{sl0p} Applying Settings..."
                sleep 2 
                $apply
                ;;
            "Kernel Fix")
                echo -e "$yellow{sl0p} Fixing Kernel Issues..."
                sleep 3
                $fixkernel
                ;;
            "Update Grub")
                echo -e "$yellow{sl0p} Updating GRUB..."
                sleep 3
                $updategrub
                ;;
            "System Health Check")
                echo -e "$yellow{sl0p} Running System Health Check..."
                sleep 3
                $healthcheck
                ;;
            "Exit")
                echo -e "$yellow{sl0p} Exiting Script."
                break
                ;;
            *) echo -e "$red{sl0p} Invalid Option! Try again.";;
        esac
    done
}

# Main Menu Options
options=(
    "APT Fix"
    "APT Broken Install Fix"
    "APT Missing Fix"
    "Apt File"
    "CheckSum Fix"
    "DPKG Issue Fix"
    "Apt Fix With Downgrade"
    "Apt Auto Remove"
    "Restore Original Kali repo"
    "Install Every Kali Tool"
    "Kernel Fix"
    "Update Grub"
    "System Health Check"
    "Exit"
)

menu
